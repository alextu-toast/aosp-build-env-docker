FROM ubuntu:18.04
MAINTAINER Alex Tu "alex.tu@toasttab.com"

# =============================================
# Set base environment
# =============================================
RUN apt-get update && apt-get install -y openssl apt-utils

WORKDIR /workdir

# Define username and temporary uid and gid
ENV USER=ubuntu USER_ID=1000 USER_GID=1000

# now creating user, change password to 'ubuntu'
RUN groupadd --gid "${USER_GID}" "${USER}" && \
    useradd \
      --uid ${USER_ID} \
      --gid ${USER_GID} \
      --create-home \
      --shell /bin/bash\
      --password $(openssl passwd -1 ubuntu)\
      ${USER}

#setup locale
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get install -y locales && dpkg-reconfigure locales --frontend noninteractive && locale-gen "en_US.UTF-8" && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8


# =============================================
# Install AOSP build deps.
# =============================================
# AOSP, refer to https://source.android.com/setup/build/initializing
RUN apt-get update && apt-get install -y \
    git-core gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib \
    libc6-dev-i386 libncurses5 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev \
    libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig

# AOSP, dependency that not be listed on websit (might because of docker)
RUN apt-get update && apt-get install -y \
    rsync python3

# Project dependency
RUN apt-get update && apt-get install -y \
    python

# =============================================
# Prepare AOSP build environment
# =============================================
# ccache and change to /workdir which is bind from host.
RUN apt-get update && apt-get install -y ccache
RUN echo "export CCACHE_DIR=/home/ubuntu/ccache; export CCACHE_EXEC=/usr/bin/ccache; export USE_CCACHE=true; cd /workdir"  >>  /home/${USER}/.bashrc

# Update to latest
RUN apt-get update && apt-get dist-upgrade -y && apt-get clean

# The major duty of entry script is to sync the UID:GID between host and docker user.
COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]
